{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./dist/js/modules/calculator.js","webpack:///./dist/js/modules/cards.js","webpack:///./dist/js/modules/forms.js","webpack:///./dist/js/modules/modal.js","webpack:///./dist/js/modules/slider.js","webpack:///./dist/js/modules/tabs.js","webpack:///./dist/js/modules/timer.js","webpack:///./dist/js/script.js","webpack:///./dist/js/services/services.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;;AAEA,uJAAuJ;AACvJ;AACA;AACA,mBAAmB;AACnB;;AAEA;AACA,eAAe;AACf,WAAW;AACX;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sCAAsC;AACtC;AACA,WAAW;AACX;;AAEA;AACA;AACA;;AAEA;AACA;;AAEe,yEAAU,E;;;;;;;;;;;;AC1HzB;AAAA;AAAiD;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA,6BAA6B,SAAS,OAAO,SAAS;AACtD,kDAAkD,WAAW;AAC7D,gDAAgD,iBAAiB;AACjE;AACA;AACA;AACA,0DAA0D,mBAAmB;AAC7E;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI,sEAAW;AACf;AACA,2BAA2B,mCAAmC;AAC9D;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;;AAEA;AACA,uBAAuB,mCAAmC;AAC1D;AACA;AACA;AACA,+BAA+B,IAAI,OAAO,OAAO;AACjD,sDAAsD,MAAM;AAC5D,oDAAoD,MAAM;AAC1D;AACA;AACA;AACA,8DAA8D,MAAM;AACpE;AACA;;AAEA;AACA,SAAS;AACT,KAAK;;AAEL;AACA;;AAEe,oEAAK,E;;;;;;;;;;;;AC7EpB;AAAA;AAAA;AAA8C;AACA;;AAE9C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;;;;AAKT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,EAAE;;AAEnB;AACA;;AAEA,gBAAgB,mEAAQ;AACxB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,qBAAqB;AACrB;AACA,qBAAqB;;AAErB;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,sBAAsB;AACtB;AACA,sBAAsB,EAAE;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,6BAA6B,EAAE;AAC/B,aAAa;AACb;;;AAGA;AACA;AACA;AACA,YAAY,wDAAS;;AAErB;AACA;AACA;AACA;AACA,gEAAgE;AAChE,gDAAgD,QAAQ;AACxD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,yDAAU;AAC1B,aAAa;AACb;;AAEA;AACA;;AAEe,oEAAK,E;;;;;;;;;;;;AChIpB;AAAA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA,QAAQ;;;;AAIR;AACA;AACA;AACA;AACA,QAAQ;;AAER;AACA;AACA;AACA;AACA,QAAQ;;;;AAIR;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEe,oEAAK,EAAC;AACD;;;;;;;;;;;;;AChEpB;AAAA;AACA,iBAAiB,uFAAuF;AACxG;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB;AACvB,mBAAmB;;AAEnB;AACA;AACA;AACA,gCAAgC,mBAAmB;AACnD,kCAAkC,WAAW;AAC7C;AACA;AACA,+BAA+B,mBAAmB;AAClD,iCAAiC,WAAW;AAC5C;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,wBAAwB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,qDAAqD,OAAO;;AAE5D;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,sCAAsC,WAAW;AACjD;AACA;AACA,qCAAqC,WAAW;AAChD;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,qDAAqD,OAAO;;AAE5D;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,sCAAsC,WAAW;AACjD;AACA;AACA,qCAAqC,WAAW;AAChD;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,mEAAmE;;AAEnE,iCAAiC;AACjC,qDAAqD;;AAErD,yDAAyD,OAAO,IAAI;;AAEpE;AACA;AACA,0CAA0C,WAAW;AACrD;AACA;AACA,yCAAyC,WAAW;AACpD;;AAEA;AACA;AACA;AACA,SAAS;AACT,KAAK;;AAEL;AACA;;AAEe,qEAAM,E;;;;;;;;;;;;ACpJrB;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEe,mEAAI,E;;;;;;;;;;;;ACvCnB;AAAA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,0BAA0B,IAAI;AAC9B,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEe,oEAAK,E;;;;;;;;;;;;ACzDpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACY;AACV;AACA;AACA;AACE;AACF;AACQ;;AAE5C;;AAEA,0CAA0C,gEAAS;;AAEnD,IAAI,6DAAI;AACR,IAAI,mEAAU;AACd,IAAI,8DAAK;AACT,IAAI,8DAAK;AACT,IAAI,8DAAK;AACT,IAAI,+DAAM;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI,8DAAK;AACT,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7BD;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA,2CAA2C,IAAI,YAAY,WAAW;AACtE;;AAEA;AACA;;AAEoB","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./dist/js/script.js\");\n","function calculator() {\r\n      // калькулятор=================================================\r\n\r\n      const rezult = document.querySelector('.calculating__result span');\r\n      let sex;\r\n      let height;\r\n      let weight;\r\n      let age;\r\n      let ratio;\r\n  \r\n      // если в local storage есть запись с ключем sex,то получаем его значение и присваиваем переменной sex,если нет присваиваем значение по умолчанию female и делаем запись в local storage.То же делаем и для переменной ratio.\r\n      if (localStorage.getItem('sex')) {\r\n          sex = localStorage.getItem('sex');\r\n      } else {\r\n          sex = 'female';\r\n          localStorage.setItem('sex', 'female');\r\n      }\r\n  \r\n      if (localStorage.getItem('ratio')) {\r\n          ratio = localStorage.getItem('ratio');\r\n      } else {\r\n          ratio = 1.375;\r\n          localStorage.setItem('ratio', 1.375);\r\n      }\r\n  \r\n      // доб.класс активности для блока(женщина-мужчина) и для блока(физическая активность).Два вызова этой функции с разными аргументами для каждого блока.Получаем  список всех элементов в блоке,для каждого элемента удаляем класс активности если он есть,потом если у отдельного элемента блока совпадает значение атрибута со значением записи в local storage то этому элементу присвоим  класс активности(если значение id-тэга равно male и значение ключа sex равно male,то присвоить этому элементу класс активности).Тоже условие и для блока физическая активность\r\n      function initLocalSettings(selector, activeClass) {\r\n          const elements = document.querySelectorAll(selector);\r\n          elements.forEach(item => {\r\n              item.classList.remove(activeClass);\r\n  \r\n              if (item.getAttribute('id') === localStorage.getItem('sex')) {\r\n                  item.classList.add(activeClass);\r\n              }\r\n              if (item.getAttribute('data-ratio') === localStorage.getItem('ratio')) {\r\n                  item.classList.add(activeClass);\r\n              }\r\n          });\r\n      }\r\n  \r\n      initLocalSettings('#gender div', 'calculating__choose-item_active');\r\n      initLocalSettings('.calculating__choose_big div', 'calculating__choose-item_active');\r\n  \r\n      //подсчет калорий и проверка условий(если не введено хоть одно значение-результата не будет)результат вычислений не сохраняем в переменную,а сразу выводим в span\r\n      function calcTotal() {\r\n          if (!sex || !height || !weight || !age || !ratio) {\r\n              rezult.textContent = '______';\r\n              return;\r\n          }\r\n          if (sex === 'female') {\r\n              rezult.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio);\r\n          } else {\r\n              rezult.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);\r\n          }\r\n      }\r\n      \r\n      calcTotal();\r\n  \r\n      // собираем данные с блока (женщина-мужчина(здесь нужно получить значение id)) и блока(физическая активность(здесь нужно получить значение data-ratio)).Два вызова этой функции с разными аргументами для каждого блока.Получаем коллекцию элементов,на каждый элемент навешиваем обработчик событий с условием если клик произошел на обьекте события укоторого есть атрибут data-ratio то переменной ratio присваиваем значение этого атрибута и записываем новые данные в local storage,в ином случае обращаемся к id,его значению и записываем  в хранилище\r\n      function getStaticInfo(selector, activeClass) {\r\n          const elements = document.querySelectorAll(selector);\r\n  \r\n          elements.forEach(item => {\r\n              item.addEventListener('click', (e) => {\r\n                  if (e.target.getAttribute('data-ratio')) {\r\n                      ratio = +e.target.getAttribute('data-ratio');\r\n                      localStorage.setItem('ratio', ratio);\r\n                  } else {\r\n                      sex = e.target.getAttribute('id');\r\n                      localStorage.setItem('sex', sex);\r\n                  }\r\n  \r\n                  // для каждого элемента удаляем класс активности если он есть,обьекту события клика присаиваем класс активности,вызываем calcTotal(); чтобы после каждого изменения данных автоматически пересчитывалась формула\r\n                  elements.forEach(item => {\r\n                      item.classList.remove(activeClass);\r\n                  });\r\n                  e.target.classList.add(activeClass);\r\n  \r\n                  calcTotal();\r\n              });\r\n          });\r\n      }\r\n  \r\n      getStaticInfo('#gender div', 'calculating__choose-item_active');\r\n      getStaticInfo('.calculating__choose_big div', 'calculating__choose-item_active');\r\n  \r\n      // получение данных с блока (конституция(здесь-inputы,а значить используем input.value))Вызовем функцию три раза по одному на каждый input.Получаем элемент,навешиваем обработчик событий для input,при условии если введены не цифры-меняем цвет границы на красный,если нет-удаляем границу.\r\n      function getDynamicInfo(selector) {\r\n          const input = document.querySelector(selector);\r\n  \r\n          input.addEventListener('input', () => {\r\n              if (input.value.match(/\\D/g)) {\r\n                  input.style.border = '2px solid red';\r\n              } else {\r\n                  input.style.border = 'none';\r\n              }\r\n  \r\n              // если у input в который мы ввели данные значение атрибута  тэга id равно height,то переменной height присв. значение введеное  вэтот input.Также и для остальных\r\n              switch (input.getAttribute('id')) {\r\n                  case 'height':\r\n                      height = +input.value;\r\n                      break;\r\n                  case 'weight':\r\n                      weight = +input.value;\r\n                      break;\r\n                  case 'age':\r\n                      age = +input.value;\r\n                      break;\r\n              }\r\n  \r\n              // вызываем calcTotal(); чтобы после каждого изменения данных автоматически пересчитывалась формула\r\n              calcTotal();\r\n          });\r\n      }\r\n  \r\n      getDynamicInfo('#height');\r\n      getDynamicInfo('#weight');\r\n      getDynamicInfo('#age');\r\n  \r\n      // ============================================================\r\n}\r\n\r\nexport default calculator;","import {getResource} from '../services/services';\r\n\r\nfunction cards() {\r\n       /* используем классы============================= */\r\n       class MenuItem {\r\n        constructor(title, alt, src, description, price, parentSelector, ...classes) {\r\n            this.title = title;\r\n            this.alt = alt;\r\n            this.src = src;\r\n            this.description = description;\r\n            this.price = price;\r\n            this.transfer = 27.4;\r\n            this.parent = document.querySelector(parentSelector);\r\n            this.classes = classes;\r\n        }\r\n\r\n        changeToUAH() {\r\n            return this.price = Math.round(this.transfer * this.price);\r\n        }\r\n\r\n        render() {\r\n            const cardMenu = document.createElement('div');\r\n            if (this.classes.length === 0) {\r\n                this.cardMenu = 'menu__item';\r\n                cardMenu.classList.add(this.cardMenu);\r\n            } else {\r\n                this.classes.forEach(classname => cardMenu.classList.add(classname));\r\n            }\r\n\r\n            cardMenu.innerHTML =\r\n                ` <img src=${this.src} alt=${this.alt}>\r\n                <h3 class=\"menu__item-subtitle\">${this.title}</h3>\r\n                <div class=\"menu__item-descr\">${this.description}</div>\r\n                <div class=\"menu__item-divider\"></div>\r\n                <div class=\"menu__item-price\">\r\n                    <div class=\"menu__item-cost\">Цена:</div>\r\n                    <div class=\"menu__item-total\"><span>${this.changeToUAH()}</span> грн/день</div>\r\n                </div> \r\n            `;\r\n            this.parent.append(cardMenu);\r\n        }\r\n    }\r\n\r\n    // получение данных карточек из db.json. 1 вариант с использование класса\r\n    getResource('http://localhost:3000/menu')\r\n        .then(data => {\r\n            data.forEach(({ title, altimg, img, descr, price }) => {\r\n                new MenuItem(title, altimg, img, descr, price, '.menu .container').render();\r\n            });\r\n        });\r\n\r\n    // получение данных карточек из db.json. 2 вариант(без использования класа,формируем карточки \"на лету\")\r\n    /* getResource('http://localhost:3000/menu')\r\n        .then(data => createCard(data));\r\n\r\n    function createCard(data) {\r\n        data.forEach(({ title, altimg, img, descr, price }) => {\r\n            const card = document.createElement('div');\r\n            card.classList.add('menu__item');\r\n            card.innerHTML = `\r\n                    <img src=${img} alt=${altimg}>\r\n                    <h3 class=\"menu__item-subtitle\">${title}</h3>\r\n                    <div class=\"menu__item-descr\">${descr}</div>\r\n                    <div class=\"menu__item-divider\"></div>\r\n                    <div class=\"menu__item-price\">\r\n                        <div class=\"menu__item-cost\">Цена:</div>\r\n                        <div class=\"menu__item-total\"><span>${price}</span> грн/день</div>\r\n                    </div> \r\n                    `;\r\n\r\n            document.querySelector('.menu .container').append(card);\r\n        });\r\n    } */\r\n\r\n    /* ============================================== */\r\n}\r\n\r\nexport default cards;","import {closeModal, openModal} from './modal';\r\nimport {postData} from '../services/services';\r\n\r\nfunction forms(formSelector, modalTimeOut) {\r\n        /* =========================Forms===================== */\r\n        const forms = document.querySelectorAll(formSelector);\r\n\r\n        const message = {\r\n            loading: 'img/spinner/054_spinner.svg',\r\n            success: 'успех',\r\n            failure: 'о нет,что-то пошло не так',\r\n        };\r\n    \r\n        forms.forEach(item => {\r\n            bindPostData(item);\r\n        });\r\n    \r\n        \r\n    \r\n    \r\n        function bindPostData(form) {\r\n            form.addEventListener('submit', (e) => {\r\n                e.preventDefault();\r\n    \r\n                const statusMessage = document.createElement('img');\r\n                statusMessage.src = message.loading;\r\n                statusMessage.style.cssText = `\r\n                    display: block;\r\n                    margin: 0 auto;\r\n                `;\r\n                form.insertAdjacentElement('afterend', statusMessage);\r\n    \r\n                // реализация отправки запроса на сервер чeрез fetch API(json-формат)\r\n                const formData = new FormData(form);\r\n                // 1 вариант реализации преобразования данных формы FormData в формат JSON\r\n                /* const object = {};\r\n                formData.forEach(function (value, key) {\r\n                    object[key] = value;\r\n                }); */\r\n    \r\n                // 2 вариант реализации преобразования данных формы FormData в формат JSON(более новый способ)\r\n                const json = JSON.stringify(Object.fromEntries(formData.entries()));\r\n    \r\n                postData('http://localhost:3000/requests', json)\r\n                    .then(data => {\r\n                        console.log(data);\r\n                        showThanksModal(message.success);\r\n                        statusMessage.remove();\r\n                    }).catch(() => {\r\n                        showThanksModal(message.failure);\r\n                    }).finally(() => {\r\n                        form.reset();\r\n                    });\r\n    \r\n                // отправа данных из формы на сервер,без функции\r\n                /*  fetch('server.php', {\r\n                     method: 'POST',\r\n                     headers: {\r\n                         'content-type': 'application/json'\r\n                     },\r\n                     body: JSON.stringify(object),\r\n                 })\r\n                     .then(data => data.text())\r\n                     .then(data => {\r\n                         console.log(data);\r\n                         showThanksModal(message.success);\r\n                         statusMessage.remove();\r\n                     }).catch(() => {\r\n                         showThanksModal(message.failure);\r\n                     }).finally(() => {\r\n                         form.reset();\r\n                     }); */\r\n    \r\n                /* // реализация отправки запроса на сервер чeрез ajax (json-формат)\r\n                            const request = new XMLHttpRequest();\r\n                            request.open('POST', 'server.php');\r\n                            request.setRequestHeader('Content-type', 'application/json');\r\n                            const formData = new FormData(form);\r\n                            const object = {};\r\n                            formData.forEach(function (value, key) {\r\n                                object[key] = value;\r\n                            });\r\n                            const json = JSON.stringify(object);\r\n                            request.send(json);\r\n                \r\n                            request.addEventListener('load', () => {\r\n                                if (request.status === 200) {\r\n                                    showThanksModal(message.success);\r\n                                    form.reset();\r\n                                    statusMessage.remove();\r\n                \r\n                                    console.log(request.response);\r\n                                } else {\r\n                                    showThanksModal(message.failure);\r\n                                    form.reset();\r\n                                    statusMessage.remove();\r\n                                }\r\n                            }); */\r\n            });\r\n        }\r\n    \r\n    \r\n        function showThanksModal(message) {\r\n            const prevModalDialog = document.querySelector('.modal__dialog');\r\n            prevModalDialog.classList.add('hide');\r\n            openModal('.modal', modalTimeOut);\r\n    \r\n            const thanksModal = document.createElement('div');\r\n            thanksModal.classList.add('modal__dialog');\r\n            thanksModal.innerHTML = `\r\n                <div class=\"modal__content\">\r\n                    <div data-close class=\"modal__close\">&times;</div>\r\n                    <div class=\"modal__title\">${message}</div>\r\n                </div>\r\n            `;\r\n            document.querySelector('.modal').append(thanksModal);\r\n    \r\n            setTimeout(() => {\r\n                thanksModal.remove();\r\n                prevModalDialog.classList.remove('hide');\r\n                prevModalDialog.classList.add('show');\r\n                closeModal('.modal');\r\n            }, 2000);\r\n        }\r\n    \r\n        /* -============================================== */\r\n}\r\n\r\nexport default forms;","function openModal(modalSelector, modalTimeOut) {\r\n    const modal = document.querySelector(modalSelector);\r\n\r\n    modal.classList.add('show');\r\n    modal.classList.remove('hide');\r\n    document.body.style.overflow = 'hidden';\r\n\r\n    if(modalTimeOut) {\r\n        clearInterval(modalTimeOut);\r\n    }\r\n    \r\n}\r\n\r\nfunction closeModal(modalSelector) {\r\n    const modal = document.querySelector(modalSelector);\r\n\r\n    modal.classList.add('hide');\r\n    modal.classList.remove('show');\r\n    document.body.style.overflow = '';\r\n}\r\n\r\nfunction modal(triggerSelector, modalSelector, modalTimeOut) {\r\n       /* ===================Modal===================== */\r\n       //для независимой работы модулей жестко закрепленые части(кнопки на странице,формы и тд.) переводим в аргументы функции,а эти селекторы передаем в виде аргументов при вызове этой функции в файле script.js \r\n       const modalOpen = document.querySelectorAll(triggerSelector);\r\n       const modal = document.querySelector(modalSelector);\r\n       \r\n   \r\n      \r\n   \r\n       modalOpen.forEach(btn => {\r\n           //колбэк функцию openModal,нельзя сразу вызывать с ()(дужками)так как она вызовется сразу при построении страницы.Для того чтобы она вызывалась только по клику и для того чтобы мы могли передать аргумент в колбэк функцию,оборачиваем ее в стрелочную функцию\r\n           btn.addEventListener('click', () => openModal(modalSelector, modalTimeOut));\r\n       });\r\n   \r\n       \r\n   \r\n       modal.addEventListener('click', (e) => {\r\n           if (e.target === modal || e.target.getAttribute('data-close') == '') {\r\n               closeModal(modalSelector);\r\n           }\r\n       });\r\n   \r\n       document.addEventListener('keydown', (e) => {\r\n           if (e.code === 'Escape' && modal.classList.contains('show')) {\r\n               closeModal(modalSelector);\r\n           }\r\n       });\r\n   \r\n       \r\n\r\n       function showModalByScroll() {\r\n           if (window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight) {\r\n               openModal(modalSelector, modalTimeOut);\r\n               window.removeEventListener('scroll', showModalByScroll);\r\n           }\r\n       }\r\n       window.addEventListener('scroll', showModalByScroll);\r\n   \r\n   \r\n       /* ============================================= */\r\n}\r\n\r\nexport default modal;\r\nexport {closeModal};\r\nexport {openModal};","//в аргументах функции используем деструктуризацию обьекта,в вызывающей функции slider() в script.js в аргументы передаем обьект с селекторами,при этом их можно передавать в произвольном порядке(не втом порядке как они указаны здесь в функции)\r\nfunction slider({ container, slide, nextArrow, prevArrow, totalCounter, currentCounter, wrapper, field }) {\r\n    // =========================slider==============================\r\n\r\n    const slider = document.querySelector(container);\r\n    const sliderItems = document.querySelectorAll(slide);\r\n    const sliderPrev = document.querySelector(prevArrow);\r\n    const sliderNext = document.querySelector(nextArrow);\r\n    const total = document.querySelector(totalCounter);\r\n    const current = document.querySelector(currentCounter);\r\n    const slidesWrapper = document.querySelector(wrapper);\r\n    const slidesField = document.querySelector(field);\r\n    const width = window.getComputedStyle(slidesWrapper).width;\r\n\r\n    let slideIndex = 1; //установили индекс на единицу для удобства,отсчет текущего слайда будет начинатся с единицы,а не нуля.Это точка отсчета\r\n    let offset = 0; //точка отсчета,необходимая для расчета растояния в пикселях,на сколько нужно смещать изображение влево или вправо,что-бы оно отображалось в окошке слайдера которое мы видим\r\n\r\n    // 2 вариант(сложный слайдер)\r\n    // .Добавляем ноль,если кол-во. слайдов ниже 10.Для общего кол-ва слайдов и номреа по порядку текущего слайда \r\n    if (sliderItems.length < 10) {\r\n        total.textContent = `0${sliderItems.length}`;\r\n        current.textContent = `0${slideIndex}`;\r\n    }\r\n    else {\r\n        total.textContent = `${sliderItems.length}`;\r\n        current.textContent = `${slideIndex}`;\r\n    }\r\n\r\n    // устанавл. инлайн стили что-бы все слайди изображения были одинаковой ширины,анимацию,скрываем все изобр вне контейнера.Первоначально ширина в 650px установлена для контейнера (.offer__slider).slidesField займет длинну в 400% от 650px,по числу слайдов\r\n    slidesField.style.width = 100 * sliderItems.length + '%';\r\n    slidesField.style.display = 'flex';\r\n    slidesField.style.transition = '0.5s all';\r\n\r\n    slidesWrapper.style.overflow = 'hidden';\r\n\r\n    sliderItems.forEach(slide => {\r\n        slide.style.width = width;\r\n    });\r\n\r\n    // устанавл. position relative. для родительского контейнера,чтобы абсолютно спозиционировать точки управления слайдами\r\n    slider.style.position = 'relative';\r\n\r\n    //создаем обертку для точек и стилизуем ее\r\n    const indicators = document.createElement('ol');\r\n    const dots = [];\r\n    indicators.classList.add('carousel-indicators');\r\n    slider.append(indicators);\r\n\r\n    // создаем точки,стилизуем,вставляем в обертку indicators.Также добавлем точки  в массив dots(нужно для перебора массива точек в обработчиках событий)\r\n    for (let i = 0; i < sliderItems.length; i++) {\r\n        const dot = document.createElement('li');\r\n        dot.setAttribute('data-slide-to', i + 1);\r\n        dot.classList.add('dot');\r\n        if (i == 0) {\r\n            dot.style.opacity = 1;\r\n        }\r\n        indicators.append(dot);\r\n        dots.push(dot);\r\n    }\r\n\r\n\r\n    sliderNext.addEventListener('click', () => {\r\n        // если offset равна ширине умноженной на кол-во слайдов -1 то установ offset на ноль.При достижении последнего слайда карусель слайдов переместится на первый слайд\r\n        if (offset == parseInt(width) * (sliderItems.length - 1)) {\r\n            offset = 0;\r\n        } else {\r\n            offset += parseInt(width);\r\n        }\r\n\r\n        // задаем смещение карусели слайдов по оси х влево\r\n        slidesField.style.transform = `translateX(-${offset}px`;\r\n\r\n        // как только индекс дойдет до последнего слайда он перейдет на первый слайд.по кругу\r\n        if (slideIndex == sliderItems.length) {\r\n            slideIndex = 1;\r\n        } else {\r\n            slideIndex++;\r\n        }\r\n\r\n        // меняем текущее значение счетчика индекса при перелистывании слайдов вперед\r\n        if (sliderItems.length < 10) {\r\n            current.textContent = `0${slideIndex}`;\r\n        }\r\n        else {\r\n            current.textContent = `${slideIndex}`;\r\n        }\r\n\r\n        // Активные точки.Сперва для всех точек уст.непрозрачность 0,5,а потом к текущей точке(текущему слайду) уст. непрозрачность 1. \r\n        dots.forEach(dot => dot.style.opacity = '.5');\r\n        dots[slideIndex - 1].style.opacity = 1;\r\n    });\r\n\r\n    sliderPrev.addEventListener('click', () => {\r\n        if (offset == 0) {\r\n            offset = parseInt(width) * (sliderItems.length - 1);\r\n        } else {\r\n            offset -= parseInt(width);\r\n        }\r\n\r\n        // задаем смещение карусели слайдов по оси х вправо\r\n        slidesField.style.transform = `translateX(-${offset}px`;\r\n\r\n        // как только индекс дойдет до первого слайда он перейдет на последний слайд.по кругу\r\n        if (slideIndex == 1) {\r\n            slideIndex = sliderItems.length;\r\n        } else {\r\n            slideIndex--;\r\n        }\r\n\r\n        // меняем текущее значение счетчика индекса при перелистывании слайдов назад\r\n        if (sliderItems.length < 10) {\r\n            current.textContent = `0${slideIndex}`;\r\n        }\r\n        else {\r\n            current.textContent = `${slideIndex}`;\r\n        }\r\n\r\n        dots.forEach(dot => dot.style.opacity = '.5');\r\n        dots[slideIndex - 1].style.opacity = 1;\r\n    });\r\n\r\n    // Доб. функциональность точкам. \r\n    dots.forEach(dot => {\r\n        dot.addEventListener('click', (e) => {\r\n            const slideTo = e.target.getAttribute('data-slide-to');//получаем значение атрибута точки на которую был клик(на третей точке значение атрибута data-slide-to будет равно 3)\r\n\r\n            slideIndex = slideTo;//меняем индекс\r\n            offset = parseInt(width) * (slideTo - 1); //задаем смещение\r\n\r\n            slidesField.style.transform = `translateX(-${offset}px`;//смещаем карусель\r\n\r\n            //меняем индексы общего кол-ва слайдов и номер текущего слайда\r\n            if (sliderItems.length < 10) {\r\n                current.textContent = `0${slideIndex}`;\r\n            }\r\n            else {\r\n                current.textContent = `${slideIndex}`;\r\n            }\r\n\r\n            //задаем класс активности,активная кнопка будет непрозрачной\r\n            dots.forEach(dot => dot.style.opacity = '.5');\r\n            dots[slideIndex - 1].style.opacity = 1;\r\n        });\r\n    });\r\n\r\n    // =============================================================\r\n}\r\n\r\nexport default slider;","function tabs(tabsSelector, tabsContentSelector, tabsParentSelector, activeClass) {\r\n        /* ================Tabs================ */\r\n        const tabsParent = document.querySelector(tabsParentSelector);\r\n        const tabsChild = document.querySelectorAll(tabsSelector);\r\n        const tabsContent = document.querySelectorAll(tabsContentSelector);\r\n    \r\n        function hideTabContent() {\r\n            tabsContent.forEach(tab => {\r\n                tab.classList.remove('show', 'fade');\r\n                tab.classList.add('hide');\r\n            });\r\n            tabsChild.forEach(tab => {\r\n                tab.classList.remove(activeClass);\r\n            });\r\n        }\r\n    \r\n        function showTabContent(i = 0) {\r\n            tabsContent[i].classList.remove('hide');\r\n            tabsContent[i].classList.add('show', 'fade');\r\n            tabsChild[i].classList.add(activeClass);\r\n        }\r\n    \r\n        tabsParent.addEventListener('click', e => {\r\n            //так как в функцию tabs() в качестве аргументов передаются селекторы querySelector(с точками),а в classList  без точек то чтобы селекторы нормально работали-берем селектор-аргумент и вырезаем у него точку вначале(tabsSelector.slice(1))\r\n            if (e.target && e.target.classList.contains(tabsSelector.slice(1))) {\r\n                tabsChild.forEach((item, i) => {\r\n                    if (item == e.target) {\r\n                        hideTabContent();\r\n                        showTabContent(i);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    \r\n        hideTabContent();\r\n        showTabContent();\r\n        /* ============================================= */\r\n}\r\n\r\nexport default tabs;","function timer(id, deadLine) {\r\n       /* ===============Timer================ */\r\n\r\n       \r\n       function getTimeRemaining(endtime) {\r\n           const t = Date.parse(endtime) - Date.parse(new Date());\r\n           const days = Math.floor(t / (1000 * 60 * 60 * 24));\r\n           const hours = Math.floor((t / (1000 * 60 * 60)) % 24);\r\n           const minutes = Math.floor((t / 1000 / 60) % 60);\r\n           const seconds = Math.floor((t / 1000) % 60);\r\n   \r\n           return {\r\n               total: t,\r\n               days: days,\r\n               hours: hours,\r\n               minutes: minutes,\r\n               seconds: seconds,\r\n           };\r\n   \r\n       }\r\n   \r\n       function getZero(num) {\r\n           if (num >= 0 && num < 10) {\r\n               return `0${num}`;\r\n           } else {\r\n               return num;\r\n           }\r\n       }\r\n   \r\n       function setClock(selector, endtime) {\r\n           const timer = document.querySelector(selector);\r\n           const days = timer.querySelector('#days');\r\n           const hours = timer.querySelector('#hours');\r\n           const minutes = timer.querySelector('#minutes');\r\n           const seconds = timer.querySelector('#seconds');\r\n           const timeInterval = setInterval(updateClock, 1000);\r\n   \r\n           updateClock();\r\n   \r\n           function updateClock() {\r\n               const t = getTimeRemaining(endtime);\r\n   \r\n               days.innerHTML = getZero(t.days);\r\n               hours.innerHTML = getZero(t.hours);\r\n               minutes.innerHTML = getZero(t.minutes);\r\n               seconds.innerHTML = getZero(t.seconds);\r\n   \r\n               if (t.total <= 0) {\r\n                   clearInterval(timeInterval);\r\n               }\r\n           }\r\n   \r\n       }\r\n       setClock(id, deadLine);\r\n       /* =========================================== */\r\n}\r\n\r\nexport default timer;","import tabs from './modules/tabs';\r\nimport calculator from './modules/calculator';\r\nimport cards from './modules/cards';\r\nimport forms from './modules/forms';\r\nimport modal from './modules/modal';\r\nimport slider from './modules/slider';\r\nimport timer from './modules/timer';\r\nimport { openModal } from './modules/modal';\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n\r\n    const modalTimeOut = setTimeout(() => openModal('.modal', modalTimeOut), 50000);\r\n\r\n    tabs('.tabheader__item', '.tabcontent', '.tabheader__items', 'tabheader__item_active');\r\n    calculator();\r\n    cards();\r\n    forms('form', modalTimeOut);\r\n    modal('[data-modal]', '.modal', modalTimeOut);\r\n    slider({\r\n        container: '.offer__slider',\r\n        slide: '.offer__slide',\r\n        nextArrow: '.offer__slider-next',\r\n        prevArrow: '.offer__slider-prev',\r\n        totalCounter: '#total',\r\n        currentCounter: '#current',\r\n        wrapper: '.offer__slider-wrapper',\r\n        field: '.offer__slider-inner',\r\n    });\r\n    timer('.timer', '2022-05-01');\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","//функции получения данных с сервера и отправки данных на сервер являются сервисными функциями и их функционал переведен в отдельный файл\r\n// реализация отправки данных на сервер через функцию.\r\nconst postData = async (url, data) => {\r\n    const res = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: data,\r\n    });\r\n\r\n    return await res.json();\r\n};\r\n\r\n// получение данных для построения карточек с  товарами из db.json\r\nasync function getResource(url) {\r\n    let res = await fetch(url);\r\n\r\n    if (!res.ok) {\r\n        throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n    }\r\n\r\n    return await res.json();\r\n}\r\n\r\nexport { postData };\r\nexport { getResource };"],"sourceRoot":""}